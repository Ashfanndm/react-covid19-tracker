{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/saja.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changebleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaimage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC8DpJC,EAzDD,SAAC,GAAmD,IAAD,IAAjDC,KAAOC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,WAC9C,OAAKH,EAID,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,GAAIC,QAAQ,UACjC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WACxE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAMzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAS,SAArB,wBAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOJ,YACxE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,cACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAMzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAS,SAArB,sBAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOH,SACxE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,WACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKtB,EAAOuB,MACZC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAMzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAS,SAArB,oBA/CT,a,yBCNTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAeJ,EAEfE,IACAE,EAAY,UAAMJ,EAAN,sBAAuBE,IAJlB,kBAO+CG,IAAMC,IAAIF,GAPzD,2BAOTnC,KAAOC,EAPE,EAOFA,UAAUC,EAPR,EAOQA,UAAUC,EAPlB,EAOkBA,OAAOC,EAPzB,EAOyBA,WAPzB,kBASV,CAACH,YAAUC,YAAUC,SAAOC,eATlB,kCAWjBkC,QAAQC,IAAR,MAXiB,0DAAH,sDAeTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEEE,IAAMC,IAAN,UAAaN,EAAb,WAFF,uBAEd/B,EAFc,EAEdA,KAEFyC,EAAczC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CACzC1C,UAAU0C,EAAU1C,UAAU2C,MAC9BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPE,kBASfL,GATe,gCAWtBH,QAAQC,IAAR,MAXsB,yDAAH,qDAedQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEcE,IAAMC,IAAN,UAAaN,EAAb,eAFd,uBAEPiB,EAFO,EAEdhD,KAAOgD,UAFO,kBAGfA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAHpB,gCAKtBX,QAAQC,IAAR,MALsB,yDAAH,qD,yBCkCZW,EA9DA,SAAC,GAAkD,IAAD,IAAhDlD,KAAMC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC3BkB,mBAAS,IADkB,mBACtDR,EADsD,KAC3CS,EAD2C,KAG7DC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAGdc,KACF,IAEF,IAAMC,EACFZ,EAAUa,OAEF,kBAAC,IAAD,CAAMxD,KAAM,CACRyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAEzC,aACtB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACP,CACC7D,KAAM2C,EAAUD,KAAI,qBAAEvC,UACtBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAGR,KAEZE,EACF9D,EAEQ,kBAAC,IAAD,CACID,KAAM,CACFyD,OAAO,CAAC,WAAW,YAAY,UAC/BC,SAAU,CAAC,CACPC,MAAM,SACNG,gBAAgB,CACZ,oBACA,oBACA,qBAEJ9D,KAAK,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAGrDsC,QAAS,CACLC,OAAO,CAACC,SAAQ,GAChBC,MAAM,CAACD,SAAS,EAAME,KAAK,oBAAD,OAAqBnC,OAIvD,KAGZ,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAUR,I,mCCrClBc,EApBO,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,oBAAuB,EACInB,mBAAS,IADb,mBACpCoB,EADoC,KACnBC,EADmB,KAU3C,OAPAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAGdO,KACF,CAACkB,IAGC,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,SACxE,4BAAQA,MAAO,IAAf,UACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAe,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,S,kCCevEiD,E,4MA1BXC,MAAQ,CACJnF,KAAM,GACNiC,QAAQ,I,EAMZqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZmD,EADY,OAElB,EAAKC,SAAS,CAACrF,KAAMoF,EAAanD,QAAQA,IAFxB,2C,wPAHQD,I,OAApBoD,E,OACNE,KAAKD,SAAS,CAACrF,KAAMoF,I,qIAOhB,IAAD,EACmBE,KAAKH,MAArBnF,EADH,EACGA,KAAMiC,EADT,EACSA,QACb,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOiF,MAAOC,IAAKC,IAAaC,IAAI,aACpD,kBAAC,EAAD,CAAO1F,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBgB,KAAKhB,sBACzC,kBAACqB,EAAD,CAAO3F,KAAMA,EAAMiC,QAASA,S,GArB1B2D,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U,mBCLlDpG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.36e9302f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3xw83\",\"card\":\"Cards_card__1fqHG\",\"infected\":\"Cards_infected__cMbnf\",\"recovered\":\"Cards_recovered__1x9QF\",\"deaths\":\"Cards_deaths__2vnOo\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from \"@material-ui/core\";\r\nimport styles from './Cards.module.css';\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data :{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if (!confirmed){\r\n        return \"loading..\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={10} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                                />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}># of active cases </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}># of Recoveries </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}># of Deaths </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changebleUrl = url;\r\n\r\n    if (country){\r\n        changebleUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: {confirmed,recovered,deaths,lastUpdate} } = await axios.get(changebleUrl);\r\n\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data  } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData= data.map((dailyData) => ({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const { data :{countries} } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name )\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line, Bar} from \"react-chartjs-2\";\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Charts = ({data:{confirmed,recovered,deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line data={{\r\n                    labels: dailyData.map(({date}) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({confirmed}) => confirmed),\r\n                        label: \"Infected\",\r\n                        borderColor: \"#3333ff\",\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({deaths}) => deaths),\r\n                        label: \"Deaths\",\r\n                        borderColor: \"red\",\r\n                        backgroundColor: \"rgba(255,0,0,0.5)\",\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n                />) : null\r\n    );\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels:['Infected','Recovered','Deaths'],\r\n                        datasets: [{\r\n                            label:'People',\r\n                            backgroundColor:[\r\n                                'rgba(0,0,255,0.5)',\r\n                                'rgba(0,255,0,0.5)',\r\n                                'rgba(255,0,0,0.5)',\r\n                            ],\r\n                            data:[confirmed.value,recovered.value,deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend:{display:false},\r\n                        title:{display: true, text:`Current State in ${country}`},\r\n                    }}\r\n\r\n                />\r\n            ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React ,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from \"@material-ui/core\";\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from \"../../api\";\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value={\"\"}>Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart, CountryPicker} from './components/';\r\nimport styles from './App.module.css'\r\nimport {fetchData} from \"./api\";\r\n\r\nimport coronaimage from './images/saja.jpg';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data :{},\r\n        country:'',\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country:country});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} =this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaimage} alt=\"covid-19\"/>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Kt8S\",\"image\":\"App_image__3boKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2MEd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3OvvS\"};","module.exports = __webpack_public_path__ + \"static/media/saja.1700d204.jpg\";"],"sourceRoot":""}